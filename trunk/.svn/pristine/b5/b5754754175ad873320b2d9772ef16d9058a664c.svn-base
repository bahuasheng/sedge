/* Generated By:JavaCC: Do not edit this line. PigScriptParserConstants.java */
package org.apache.pig.tools.pigscript.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PigScriptParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CAT = 6;
  /** RegularExpression Id. */
  int FS = 7;
  /** RegularExpression Id. */
  int SH = 8;
  /** RegularExpression Id. */
  int CD = 9;
  /** RegularExpression Id. */
  int COPY = 10;
  /** RegularExpression Id. */
  int COPYFROMLOCAL = 11;
  /** RegularExpression Id. */
  int COPYTOLOCAL = 12;
  /** RegularExpression Id. */
  int DUMP = 13;
  /** RegularExpression Id. */
  int DESCRIBE = 14;
  /** RegularExpression Id. */
  int ALIASES = 15;
  /** RegularExpression Id. */
  int EXPLAIN = 16;
  /** RegularExpression Id. */
  int HELP = 17;
  /** RegularExpression Id. */
  int KILL = 18;
  /** RegularExpression Id. */
  int LS = 19;
  /** RegularExpression Id. */
  int MOVE = 20;
  /** RegularExpression Id. */
  int MKDIR = 21;
  /** RegularExpression Id. */
  int PWD = 22;
  /** RegularExpression Id. */
  int QUIT = 23;
  /** RegularExpression Id. */
  int REGISTER = 24;
  /** RegularExpression Id. */
  int USING = 25;
  /** RegularExpression Id. */
  int AS = 26;
  /** RegularExpression Id. */
  int REMOVE = 27;
  /** RegularExpression Id. */
  int REMOVEFORCE = 28;
  /** RegularExpression Id. */
  int SET = 29;
  /** RegularExpression Id. */
  int ILLUSTRATE = 30;
  /** RegularExpression Id. */
  int RUN = 31;
  /** RegularExpression Id. */
  int EXEC = 32;
  /** RegularExpression Id. */
  int PARAM = 33;
  /** RegularExpression Id. */
  int PARAM_FILE = 34;
  /** RegularExpression Id. */
  int SCRIPT = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int OUT = 37;
  /** RegularExpression Id. */
  int BRIEF = 38;
  /** RegularExpression Id. */
  int SCRIPT_DONE = 39;
  /** RegularExpression Id. */
  int SQL = 44;
  /** RegularExpression Id. */
  int PIG = 107;
  /** RegularExpression Id. */
  int EOL = 108;
  /** RegularExpression Id. */
  int QUOTE = 109;
  /** RegularExpression Id. */
  int SEMICOLON = 110;
  /** RegularExpression Id. */
  int LETTER = 111;
  /** RegularExpression Id. */
  int DIGIT = 112;
  /** RegularExpression Id. */
  int SPECIALCHAR = 113;
  /** RegularExpression Id. */
  int FSSPECIALCHAR = 114;
  /** RegularExpression Id. */
  int FLOAT = 115;
  /** RegularExpression Id. */
  int INTEGER = 116;
  /** RegularExpression Id. */
  int NUMBER = 117;
  /** RegularExpression Id. */
  int IDENTIFIER = 118;
  /** RegularExpression Id. */
  int PATH = 119;
  /** RegularExpression Id. */
  int QUOTEDSTRING = 120;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int SQL_START = 1;
  /** Lexical state. */
  int SQL_END = 2;
  /** Lexical state. */
  int PIG_START = 3;
  /** Lexical state. */
  int SINGLE_LINE_COMMENT = 4;
  /** Lexical state. */
  int MULTI_LINE_COMMENT = 5;
  /** Lexical state. */
  int IN_STRING = 6;
  /** Lexical state. */
  int IN_COMMAND = 7;
  /** Lexical state. */
  int GENERATE = 8;
  /** Lexical state. */
  int SCHEMA_DEFINITION = 9;
  /** Lexical state. */
  int BAG_CONSTANT = 10;
  /** Lexical state. */
  int IN_BLOCK = 11;
  /** Lexical state. */
  int IN_DOUBLE_QUOTED_STRING = 12;
  /** Lexical state. */
  int PIG_END = 13;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "<token of kind 3>",
    "<token of kind 4>",
    "<token of kind 5>",
    "\"cat\"",
    "\"fs\"",
    "\"sh\"",
    "\"cd\"",
    "\"cp\"",
    "\"copyFromLocal\"",
    "\"copyToLocal\"",
    "\"dump\"",
    "\"describe\"",
    "\"aliases\"",
    "\"explain\"",
    "\"help\"",
    "\"kill\"",
    "\"ls\"",
    "\"mv\"",
    "\"mkdir\"",
    "\"pwd\"",
    "\"quit\"",
    "\"register\"",
    "\"using\"",
    "\"as\"",
    "\"rm\"",
    "\"rmf\"",
    "\"set\"",
    "\"illustrate\"",
    "\"run\"",
    "\"exec\"",
    "\"-param\"",
    "\"-param_file\"",
    "\"-script\"",
    "\"-dot\"",
    "\"-out\"",
    "\"-brief\"",
    "\"scriptDone\"",
    "\"sql\"",
    "\";\"",
    "<token of kind 42>",
    "<token of kind 43>",
    "\"\"",
    "\"split\"",
    "\"define\"",
    "\"store\"",
    "\"import\"",
    "<token of kind 49>",
    "<token of kind 50>",
    "<token of kind 51>",
    "\"\\\'\"",
    "\"`\"",
    "<token of kind 54>",
    "<token of kind 55>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"--\"",
    "\"/*\"",
    "<token of kind 61>",
    "<token of kind 62>",
    "<token of kind 63>",
    "<token of kind 64>",
    "\"*/\"",
    "<token of kind 66>",
    "<token of kind 67>",
    "\"\\\\\\\'\"",
    "\"\\\'\"",
    "<token of kind 70>",
    "<token of kind 71>",
    "\"\\\\`\"",
    "\"`\"",
    "<token of kind 74>",
    "<token of kind 75>",
    "\"{\"",
    "<token of kind 77>",
    "\";\"",
    "<token of kind 79>",
    "<token of kind 80>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "<token of kind 85>",
    "<token of kind 86>",
    "<token of kind 87>",
    "\"{\"",
    "\"}\"",
    "<token of kind 90>",
    "<token of kind 91>",
    "\"\\\"\"",
    "<token of kind 93>",
    "<token of kind 94>",
    "\"{\"",
    "<token of kind 96>",
    "\"\\\'\"",
    "\"`\"",
    "\"--\"",
    "\"/*\"",
    "<token of kind 101>",
    "<token of kind 102>",
    "\"\\\\\\\"\"",
    "\"\\\"\"",
    "<token of kind 105>",
    "<token of kind 106>",
    "\"\"",
    "<EOL>",
    "\"\\\'\"",
    "\";\"",
    "<LETTER>",
    "<DIGIT>",
    "<SPECIALCHAR>",
    "<FSSPECIALCHAR>",
    "<FLOAT>",
    "<INTEGER>",
    "<NUMBER>",
    "<IDENTIFIER>",
    "<PATH>",
    "<QUOTEDSTRING>",
  };

}
