package edu.umass.cs.pig.test;

import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;
import java.util.Properties;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

import org.apache.pig.ExecType;
import org.apache.pig.PigServer;
import org.apache.pig.backend.executionengine.ExecException;
import org.apache.pig.data.DataBag;
import org.apache.pig.impl.PigContext;
import org.apache.pig.newplan.Operator;
import org.junit.BeforeClass;
import org.junit.Test;

import edu.umass.cs.pig.test.util.RFile;
import edu.umass.cs.pig.test.util.StreamGobbler;

public class TestExGen4PigMixReal {
	static PigContext pigContext = new PigContext(ExecType.LOCAL, new Properties());
	static int MAX = 100;
	static int MIN = 10;
	static String widerow, widerowX;
//	static  File fileWiderowX;
	static String pScalability;
	public static Logger logger = Logger.getLogger("MyLog");
	public static FileHandler fh;
	
	{
		try {
			pigContext.connect();
		} catch (ExecException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	
	
	@BeforeClass
	public static void oneTimeSetup() throws Exception {
		try {
			RFile.deleteIfExists("MyLogFile.log");
	        fh = new FileHandler("MyLogFile.log", true);
	        logger.addHandler(fh);
			logger.setLevel(Level.FINE);
			SimpleFormatter formatter = new SimpleFormatter();
			fh.setFormatter(formatter);
			fh.setLevel(Level.FINE);
        } catch (SecurityException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
        } catch (IOException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
        }
		
		widerow = "'" + "/home/kaituo/code/pig3/trunk/pigmixdata/widerow" + "'";
		
//		fileWiderowX = File.createTempFile("dataWiderowX", ".dat");
		
		pScalability =  "/home/kaituo/code/pig3/trunk/scripts/pScalability.pig";
		RFile.createRFile(pScalability);
		
//		widerowX = "'" + fileWiderowX.getPath() + "'";
		widerowX = "/home/kaituo/code/pig3/trunk/pigmixExtData/scalabilityData";
		RFile.deleteIfExists(widerowX);
		
		writeScalabilityData(widerow, widerowX, pScalability);

		System.out.println("widerowX : " + widerowX + "\n"); 
	    System.out.println("Test data created.");
	}
	
	private static void writeScalabilityData(String dataOrig, String dataOut, String PIG_FILE) {
		int n = 501;

		String abody = "";
		for (int i = 0; i < n; i++) {
			if (i > 0)
				abody = abody + ", ";
			abody = abody + "c" + i + ": int";
		}

//		String cbody = "";
//		for (int j = 0; j < n; j++) {
//			if (j > 0)
//				cbody = cbody + ", ";
//			cbody = cbody + "SUM(A.c" + j + ") as c" + j;
//		}
//
//		String dbody = "";
//		for (int k = 0; k < n; k++) {
//			if (k > 0)
//				dbody = dbody + " and ";
//			dbody = dbody + "c" + k + " > 100";
//		}
		
		try {
			PrintWriter w = new PrintWriter(new FileWriter(PIG_FILE));
	        w.println("A = load " + dataOrig.toString()
					+ " using PigStorage('\u0001') as (name: chararray, " + abody + ");");
	        w.println("B = foreach A generate name, c0, c1;");
	        w.println("C = limit B " + MIN + ";");
	        w.println("store C into '" + dataOut + "';");
	        w.close();
	        
	        Process pp = Runtime.getRuntime().exec("java -Xmx256m -cp /home/kaituo/Downloads/pig-0.9.2/pig-0.9.2.jar org.apache.pig.Main -x local " + PIG_FILE.toString());
	        logErrororOutput(pp);
		} catch(IOException io) {
			io.printStackTrace();
		} 
		
	}
	
	private static void logErrororOutput(Process proc) {
        // any error message?
        StreamGobbler errorGobbler = new StreamGobbler(proc.getErrorStream(), "OUTPUT", logger);            
        
        // any output?
        StreamGobbler outputGobbler = new StreamGobbler(proc.getInputStream(), "OUTPUT", logger);
            
        // kick them off
        errorGobbler.start();
        outputGobbler.start();
                                
        // any error???
        int exitVal;
        try {
	        exitVal = proc.waitFor();
	        logger.log(Level.FINE, "ExitValue: " + exitVal);
        } catch (InterruptedException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
        }
        
    }
	
	@Test
	  public void testScalability() throws Exception {
	      PigServer pigServer = new PigServer(pigContext);
	      pigServer.setBatchOn();
	      pigServer.registerQuery("A = load '" + widerowX.toString() + "/part-r-00000' using PigStorage() as (name: chararray, x : int, y : int);");
	      pigServer.registerQuery("B = group A by name;");
	      pigServer.registerQuery("C = foreach B generate group, SUM(A.x) as xx, SUM(A.y) as yy;");
	      pigServer.registerQuery("D = filter C by xx > 100 and yy > 100;");
	      //pigServer.registerQuery("store D into '" +  out.getAbsolutePath() + "';");
	      Map<Operator, DataBag> derivedData = pigServer.getExamples2("D");
	  
	      assertTrue(derivedData != null);
	  }
	
	

}
